import os
import json
import ast

from maya import cmds as cmds

class Curves:
	def __init__(self,cv_name):
		self.cv_name = cv_name# インスタンス変数で作りたい名前を受け取る
		JSONPATH = os.path.dirname(__file__)+"/curves.json"
		_json_obj = open(JSONPATH)
		self.json_file = json.load(_json_obj)
		
		print(JSONPATH)
		self.get_cvID()
	
	def get_cvID(self):
		_id = self.json_file[self.cv_name][0]["ID"]#インスタンス変数で形を受け取る
		self.cv_id = ast.literal_eval(_id)

	def make_curves(self):
		node = self.cv_name


		if node == "cube":
			cmds.curve(d=1,p=((0.5, 0.5, 0.5),
			 (0.5, 0.5, -0.5),
			 (-0.5, 0.5, -0.5),
			 (-0.5, -0.5, -0.5),
			 (0.5, -0.5, -0.5),
			 (0.5, 0.5, -0.5),
			 (-0.5, 0.5, -0.5),
			 (-0.5, 0.5, 0.5),
			 (0.5, 0.5, 0.5),
			 (0.5, -0.5, 0.5),
			 (0.5, -0.5, -0.5),
			 (-0.5, -0.5, -0.5),
			 (-0.5, -0.5, 0.5),
			 (0.5, -0.5, 0.5),
			 (-0.5, -0.5, 0.5),
			 (-0.5, 0.5, 0.5)))

		elif node == "square":
			cmds.curve(d=1,p=((1.0, 0.0, -1.0),
			 (-1.0, 0.0, -1.0),
			 (-1.0, 0.0, 1.0),
			 (1.0, 0.0, 1.0),
			 (1.0, 0.0, -1.0)))
	
		elif node == "cone":
			cmds.curve(d=1,p=((0.5, 0.0, 0.866025),
			 (-0.5, 0.0, 0.866025),
			 (0.0, 2.0, 0.0),
			 (0.5, 0.0, 0.866025),
			 (1.0, 0.0, 0.0),
			 (0.0, 2.0, 0.0),
			 (0.5, 0.0, -0.866025),
			 (1.0, 0.0, 0.0),
			 (0.0, 2.0, 0.0),
			 (-0.5, 0.0, -0.866026),
			 (0.5, 0.0, -0.866025),
			 (0.0, 2.0, 0.0),
			 (-1.0, 0.0, -1.5885e-07),
			 (-0.5, 0.0, -0.866026),
			 (0.0, 2.0, 0.0),
			 (-0.5, 0.0, 0.866025),
			 (-1.0, 0.0, -1.5885e-07)))

		elif node == "ball":
			cmds.curve(d=1,p=((0.0, 0.0, 1.0),
			 (0.0, 0.5, 0.866025),
			 (0.0, 0.866025, 0.5),
			 (0.0, 1.0, 0.0),
			 (0.0, 0.866025, -0.5),
			 (0.0, 0.5, -0.866025),
			 (0.0, 0.0, -1.0),
			 (0.0, -0.5, -0.866025),
			 (0.0, -0.866025, -0.5),
			 (0.0, -1.0, 0.0),
			 (0.0, -0.866025, 0.5),
			 (0.0, -0.5, 0.866025),
			 (0.0, 0.0, 1.0),
			 (0.707107, 0.0, 0.707107),
			 (1.0, 0.0, 0.0),
			 (0.707107, 0.0, -0.707107),
			 (0.0, 0.0, -1.0),
			 (-0.707107, 0.0, -0.707107),
			 (-1.0, 0.0, 0.0),
			 (-0.866025, 0.5, 0.0),
			 (-0.5, 0.866025, 0.0),
			 (0.0, 1.0, 0.0),
			 (0.5, 0.866025, 0.0),
			 (0.866025, 0.5, 0.0),
			 (1.0, 0.0, 0.0),
			 (0.866025, -0.5, 0.0),
			 (0.5, -0.866025, 0.0),
			 (0.0, -1.0, 0.0),
			 (-0.5, -0.866025, 0.0),
			 (-0.866025, -0.5, 0.0),
			 (-1.0, 0.0, 0.0),
			 (-0.707107, 0.0, 0.707107),
			 (0.0, 0.0, 1.0)))

		elif node == "foreArrow":
			cmds.curve(d=1,p=((0.0, 0.0, -1.1025),
				 (-0.33, 0.0, -0.6075),
				 (-0.165, 0.0, -0.6075),
				 (-0.165, 0.0, -0.165),
				 (-0.6075, 0.0, -0.165),
				 (-0.6075, 0.0, -0.33),
				 (-1.1025, 0.0, 0.0),
				 (-0.6075, 0.0, 0.33),
				 (-0.6075, 0.0, 0.165),
				 (-0.165, 0.0, 0.165),
				 (-0.165, 0.0, 0.6075),
				 (-0.33, 0.0, 0.6075),
				 (0.0, 0.0, 1.1025),
				 (0.33, 0.0, 0.6075),
				 (0.165, 0.0, 0.6075),
				 (0.165, 0.0, 0.165),
				 (0.6075, 0.0, 0.165),
				 (0.6075, 0.0, 0.33),
				 (1.1025, 0.0, 0.0),
				 (0.6075, 0.0, -0.33),
				 (0.6075, 0.0, -0.165),
				 (0.165, 0.0, -0.165),
				 (0.165, 0.0, -0.6075),
				 (0.33, 0.0, -0.6075),
				 (0.0, 0.0, -1.1025)))

		elif node == "test":
			cmds.curve(d=1,p=(self.cv_id))